{"ast":null,"code":"var _jsxFileName = \"/Users/marjolaine/antelopes-case-study/src/components/ScatterPlot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScatterPlot = ({\n  antelopesData\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n  useEffect(() => {\n    if (chartRef && chartRef.current) {\n      const ctx = chartRef.current.getContext('2d');\n      if (ctx) {\n        const hornTypes = [...new Set(antelopesData.map(({\n          horns\n        }) => horns))];\n        const datasets = hornTypes.map(hornType => {\n          const filteredData = antelopesData.filter(species => species.horns === hornType);\n          return {\n            label: hornType,\n            data: filteredData.map(({\n              weight,\n              height\n            }) => ({\n              x: weight,\n              y: height\n            }))\n          };\n        });\n        const config = {\n          type: 'scatter',\n          data: {\n            datasets: datasets\n          },\n          options: {\n            scales: {\n              x: {\n                type: 'linear',\n                position: 'bottom',\n                title: {\n                  display: true,\n                  text: 'Weight (kg)'\n                }\n              },\n              y: {\n                type: 'linear',\n                position: 'left',\n                title: {\n                  display: true,\n                  text: 'Height (cm)'\n                }\n              }\n            },\n            plugins: {\n              title: {\n                display: true,\n                text: 'Weight and height of antelopes based on their horn type'\n              }\n            }\n          }\n        };\n        if (chartInstance.current) {\n          chartInstance.current.destroy();\n        }\n        chartInstance.current = new Chart(ctx, config);\n      }\n    }\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [antelopesData]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 10\n  }, this);\n};\n_s(ScatterPlot, \"u5+iHnwD4hjVcMuzTE/TbI78erc=\");\n_c = ScatterPlot;\nexport default ScatterPlot;\nvar _c;\n$RefreshReg$(_c, \"ScatterPlot\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","ScatterPlot","antelopesData","_s","chartRef","chartInstance","current","ctx","getContext","hornTypes","Set","map","horns","datasets","hornType","filteredData","filter","species","label","data","weight","height","x","y","config","type","options","scales","position","title","display","text","plugins","destroy","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/marjolaine/antelopes-case-study/src/components/ScatterPlot.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst ScatterPlot = ({ antelopesData }) => {\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n\n  useEffect(() => {\n    if (chartRef && chartRef.current) {\n      const ctx = chartRef.current.getContext('2d');\n      if (ctx) {\n        const hornTypes = [...new Set(antelopesData.map(({ horns }) => horns))];\n        const datasets = hornTypes.map((hornType) => {\n          const filteredData = antelopesData.filter((species) => species.horns === hornType);\n          return {\n            label: hornType,\n            data: filteredData.map(({ weight, height }) => ({ x: weight, y: height })),\n          };\n        });\n\n        const config = {\n          type: 'scatter',\n          data: {\n            datasets: datasets,\n          },\n          options: {\n            scales: {\n              x: {\n                type: 'linear',\n                position: 'bottom',\n                title: {\n                  display: true,\n                  text: 'Weight (kg)'\n                }\n              },\n              y: {\n                type: 'linear',\n                position: 'left',\n                title: {\n                  display: true,\n                  text: 'Height (cm)'\n                }\n              }\n            },\n            plugins: {\n              title: {\n                display: true,\n                text: 'Weight and height of antelopes based on their horn type',\n              },\n            }\n          }\n        };\n\n        if (chartInstance.current) {\n          chartInstance.current.destroy();\n        }\n\n        chartInstance.current = new Chart(ctx, config);\n      }\n    }\n\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [antelopesData]);\n\n  return <canvas ref={chartRef} />;\n};\n\nexport default ScatterPlot;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMQ,aAAa,GAAGR,MAAM,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IACd,IAAIQ,QAAQ,IAAIA,QAAQ,CAACE,OAAO,EAAE;MAChC,MAAMC,GAAG,GAAGH,QAAQ,CAACE,OAAO,CAACE,UAAU,CAAC,IAAI,CAAC;MAC7C,IAAID,GAAG,EAAE;QACP,MAAME,SAAS,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACR,aAAa,CAACS,GAAG,CAAC,CAAC;UAAEC;QAAM,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC;QACvE,MAAMC,QAAQ,GAAGJ,SAAS,CAACE,GAAG,CAAEG,QAAQ,IAAK;UAC3C,MAAMC,YAAY,GAAGb,aAAa,CAACc,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACL,KAAK,KAAKE,QAAQ,CAAC;UAClF,OAAO;YACLI,KAAK,EAAEJ,QAAQ;YACfK,IAAI,EAAEJ,YAAY,CAACJ,GAAG,CAAC,CAAC;cAAES,MAAM;cAAEC;YAAO,CAAC,MAAM;cAAEC,CAAC,EAAEF,MAAM;cAAEG,CAAC,EAAEF;YAAO,CAAC,CAAC;UAC3E,CAAC;QACH,CAAC,CAAC;QAEF,MAAMG,MAAM,GAAG;UACbC,IAAI,EAAE,SAAS;UACfN,IAAI,EAAE;YACJN,QAAQ,EAAEA;UACZ,CAAC;UACDa,OAAO,EAAE;YACPC,MAAM,EAAE;cACNL,CAAC,EAAE;gBACDG,IAAI,EAAE,QAAQ;gBACdG,QAAQ,EAAE,QAAQ;gBAClBC,KAAK,EAAE;kBACLC,OAAO,EAAE,IAAI;kBACbC,IAAI,EAAE;gBACR;cACF,CAAC;cACDR,CAAC,EAAE;gBACDE,IAAI,EAAE,QAAQ;gBACdG,QAAQ,EAAE,MAAM;gBAChBC,KAAK,EAAE;kBACLC,OAAO,EAAE,IAAI;kBACbC,IAAI,EAAE;gBACR;cACF;YACF,CAAC;YACDC,OAAO,EAAE;cACPH,KAAK,EAAE;gBACLC,OAAO,EAAE,IAAI;gBACbC,IAAI,EAAE;cACR;YACF;UACF;QACF,CAAC;QAED,IAAI1B,aAAa,CAACC,OAAO,EAAE;UACzBD,aAAa,CAACC,OAAO,CAAC2B,OAAO,CAAC,CAAC;QACjC;QAEA5B,aAAa,CAACC,OAAO,GAAG,IAAIR,KAAK,CAACS,GAAG,EAAEiB,MAAM,CAAC;MAChD;IACF;IAEA,OAAO,MAAM;MACX,IAAInB,aAAa,CAACC,OAAO,EAAE;QACzBD,aAAa,CAACC,OAAO,CAAC2B,OAAO,CAAC,CAAC;MACjC;IACF,CAAC;EACH,CAAC,EAAE,CAAC/B,aAAa,CAAC,CAAC;EAEnB,oBAAOF,OAAA;IAAQkC,GAAG,EAAE9B;EAAS;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClC,CAAC;AAACnC,EAAA,CAlEIF,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AAoEjB,eAAeA,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}